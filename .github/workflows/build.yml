name: Build NixOS Configuration

on:
  push:
  workflow_dispatch:
  workflow_run:
    workflows: ["flake-bump"]
    types:
      - completed

jobs:
  flake-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix flake check  -L -v
  build:
    needs: flake-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Use Cachix
        uses: cachix/cachix-action@v15
        with:
          name: "datantho-nixos"
          authToken: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: Config nix cache
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          gc-max-store-size-linux: 1073741824
      - run: nix run github:Mic92/nix-fast-build -- --cachix-cache datantho-nixos --skip-cached --no-nom --eval-max-memory-size 16384 --flake .#nixosConfigurations.nixos.config.system.build.toplevel
